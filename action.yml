# action.yml
name: 'APIsec Trigger Scan'
description: 'Continuous, automated, comprehensive API Security Testing'
inputs:
  apisec-username:
    description: 'The APIsec username with which the scans will be executed'
    required: true
    default: ''
  apisec-password:
    description: 'The Password of the APIsec user with which the scans will be executed'
    required: true
    default: '' 
  apisec-project:
    description: 'The Name of the project for security scan'
    required: true
    default: ''
  apisec-profile:  
    description: 'The Name of the scan profile to be executed'
    required: false
    default: 'Master'
  apisec-region:  
    description: 'The location the scan will be executed in'
    required: false
    default: ''
  sarif-result-file:  
    description: 'The path to the sarif format result file'
    required: false
    default: ''
  apisec-severity:  
    description: 'The severity to verify like "Critical", "High" ..etc based on which to break pipeline'
    required: false
    default: ''  
  apisec-threshold:
    description: 'The threshold severity count of "Critical", "High" ..etc based on which to break pipeline'
    required: false
    default: ''  
  apisec-playbook-regenerate:
    description: 'Whether to regenerate the playbooks, if yes pass value as "true" or else "false"'
    required: false
    default: ''  
  apisec-email-report:
    description: 'Whether to trigger scan email reports, if yes pass value as "true" or else "false"'
    required: false
    default: ''  
  apisec-hostname:
    description: 'APIsec Product HostName/URL '
    required: false
    default: 'https://cloud.apiesc.ai'      
 
runs:
  using: "composite" 
  steps:
    - run:  ${GITHUB_ACTION_PATH}/apisec-scan-trigger.sh --username "${{inputs.apisec-username}}" --password "${{ inputs.apisec-password }}" --projectname "${{ inputs.apisec-project }}" --profile "${{ inputs.apisec-profile }}" --scanner "${{ inputs.apisec-region }}" --outputfile "${{ inputs.sarif-result-file }}" --severity "${{ inputs.apisec-severity  }}" --threshold "${{ inputs.apisec-threshold }}" --playbookRegenerate "${{ inputs.apisec-playbook-regenerate }}" --hostname "${{ inputs.apisec-hostname }}" --emailReport "${{ inputs.apisec-email-report }}"
#    - run:  ${GITHUB_ACTION_PATH}/apisec-scan-trigger.sh "${{inputs.apisec-username}}" "${{ inputs.apisec-password }}" "${{ inputs.apisec-project }}" "${{ inputs.apisec-profile }}" "${{ inputs.apisec-region }}" "${{ inputs.sarif-result-file }}" "${{ inputs.apisec-severity  }}" "${{ inputs.apisec-threshold }}" "${{ inputs.apisec-playbook-regenerate }}" "${{ inputs.apisec-email-report }}"
      shell: bash




















# # action.yml
# name: 'APIsec Playbook Regeneration'
# description: 'Continuous, automated, comprehensive API Security Testing'
# inputs:
#   apisec-username:
#     description: 'The APIsec username with which the scans will be executed'
#     required: true
#     default: ''
#   apisec-password:
#     description: 'The Password of the APIsec user with which the scans will be executed'
#     required: true
#     default: '' 
#   apisec-projectname:
#     description: 'The Name of the project for security scan'
#     required: true
#     default: ''
#   apisec-profile:  
#     description: 'The Name of the scan profile to be executed'
#     required: false
#     default: 'Master'
#   apisec-region:  
#     description: 'The location the scan will be executed in'
#     required: false
#     default: ''
#   sarif-result-file:  
#     description: 'The path to the sarif format result file'
#     required: false
#     default: ''
#   apisec-host:
#     description: 'APIsec host url'
#     required: false
#     default: ''
#   apisec-email-report:
#     description: 'Whether to send reports email'
#     required: false
#     default: ''
#   apisec-report-type:
#     description: 'Type of Report to be email'
#     required: false
#     default: ''

# runs:
#   using: "composite"
#   steps:
#     - run:  ${GITHUB_ACTION_PATH}/apisec-scan-trigger.sh --username "${{ inputs.apisec-username }}" --password "${{ inputs.apisec-password }}" --projectname "${{ inputs.apisec-projectname }}" --profile "${{ inputs.apisec-profile }}" --scanner "${{ inputs.apisec-region }}" --outputfile "${{ inputs.sarif-result-file }}" --host "${{ inputs.apisec-host }}" --emailReport "${{ inputs.apisec-email-report }}" --reportType "${{ inputs.apisec-report-type }}"  
# #    - run:  ${GITHUB_ACTION_PATH}/github-apisec-scan.sh --username "${{ inputs.apisec-username }}" --password "${{ inputs.apisec-password }}" --projectname "${{ inputs.apisec-projectname }}" --profile "${{ inputs.apisec-profile }}" --scanner "${{ inputs.apisec-region }}" --outputfile "${{ inputs.sarif-result-file }}" --host "${{ inputs.apisec-host }}" --emailReport "${{ inputs.apisec-email-report }}" --reportType "${{ inputs.apisec-report-type }}"
# #    - run:  ${GITHUB_ACTION_PATH}/apisec_playbooks_regenerate_scan_trigger.sh  "${{ inputs.apisec-username }}" "${{ inputs.apisec-password }}" "${{ inputs.apisec-projectname }}" "${{ inputs.apisec-profile }}" "${{ inputs.apisec-region }}" "${{ inputs.sarif-result-file }}" "${{ inputs.apisec-host }}" "${{ inputs.apisec-email-report }}"  "${{ inputs.apisec-report-type }}"
#       shell: bash
