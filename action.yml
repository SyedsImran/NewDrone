# action.yml
name: 'Playbooks Scan'
description: 'Continuous, automated, comprehensive API Security Testing'
inputs:
  apisec-username:
    description: 'The APIsec username with which the scans will be executed'
    required: true
    default: ''
  apisec-password:
    description: 'The Password of the APIsec user with which the scans will be executed'
    required: true
    default: '' 
  apisec-project:
    description: 'The Name of the project for security scan'
    required: true
    default: ''
  apisec-profile:  
    description: 'The Name of the scan profile to be executed'
    required: false
    default: 'Master'
  apisec-region:  
    description: 'The location the scan will be executed in'
    required: false
    default: ''
  sarif-result-file:  
    description: 'The path to the sarif format result file'
    required: false
    default: ''
  apisec-email-report:
    description: 'To trigger scan email reports, set this value as "true" or else "false"'
    required: false
    default: ''
  apisec-fail-on-vuln-severity: 
    description: 'Pass the severity string for which pipeline execution breaks upon finding that severity vulnerability. Possible string values are Critical, High and Medium severity. By default its an empty string "".'
    required: false
    default: ''     
  apisec-oas:
    description: 'To register a project, set this value as "true" or else "false"'
    required: false
    default: 'false'
  apisec-openapi-spec-url: 
    description: 'OpenAPI Spec Url for registering a project'
    required: false
    default: ''    
  apisec-refresh-playbooks:
    description: 'To regenerate/refresh the playbooks of a project, set this value as "true" or else "false"'
    required: false
    default: ''       

runs:
  using: "composite"
  steps:  
    - run:  ${GITHUB_ACTION_PATH}/apisec-vulnerability-check.sh --username "${{inputs.apisec-username}}" --password "${{ inputs.apisec-password }}" --project "${{ inputs.apisec-project }}" --profile "${{ inputs.apisec-profile }}" --scanner "${{ inputs.apisec-region }}"  --outputfile  "${{ inputs.sarif-result-file }}"   --refresh-playbooks "${{ inputs.apisec-refresh-playbooks }}" --host "${{ inputs.apisec-hostname }}" --emailReport "${{ inputs.apisec-email-report }}" --fail-on-vuln-severity "${{ inputs.apisec-fail-on-vuln-severity }}" --oas "${{ inputs.apisec-oas }}" --openApiSpecUrl "${{ inputs.apisec-openapi-spec-url }}"



# # action.yml
# name: 'APIsec Trigger Scan1'
# description: 'Continuous, automated, comprehensive API Security Testing'
# inputs:
#   apisec-username:
#     description: 'The APIsec username with which the scans will be executed'
#     required: true
#     default: ''
#   apisec-password:
#     description: 'The Password of the APIsec user with which the scans will be executed'
#     required: true
#     default: '' 
#   apisec-project:
#     description: 'The Name of the project for security scan'
#     required: true
#     default: ''
#   apisec-profile:  
#     description: 'The Name of the scan profile to be executed'
#     required: false
#     default: 'Master'
#   apisec-region:  
#     description: 'The location the scan will be executed in'
#     required: false
#     default: ''
#   sarif-result-file:  
#     description: 'The path to the sarif format result file'
#     required: false
#     default: ''
#   apisec-email-report:
#     description: 'To trigger scan email reports, set this value as "true" or else "false"'
#     required: false
#     default: ''
#   apisec-fail-on-high-vulns: 
#     description: 'Set this as true to break pipeline execution for High and Critical severity. By default its set as false.'
#     required: false
#     default: 'false'     
#   apisec-oas:
#     description: 'To register a project, set this value as "true" or else "false"'
#     required: false
#     default: 'false'
#   apisec-openapi-spec-url: 
#     description: 'OpenAPI Spec Url for registering a project'
#     required: false
#     default: ''    
#   apisec-refresh-playbooks:
#     description: 'To regenerate/refresh the playbooks of a project, set this value as "true" or else "false"'
#     required: false
#     default: ''  
#   apisec-scan-all-projects:
#     description: 'To trigger scans on all projects, set this value as "true" or else "false"'
#     required: false
#     default: 'false'    
 
# runs:
#   using: "composite" 
#   steps:
#     - run:  ${GITHUB_ACTION_PATH}/apisec-vulnerability-check.sh --username "${{inputs.apisec-username}}" --password "${{ inputs.apisec-password }}" --project "${{ inputs.apisec-project }}" --profile "${{ inputs.apisec-profile }}" --scanner "${{ inputs.apisec-region }}"  --outputfile  ${{ inputs.sarif-result-file }}   --refresh-playbooks "${{ inputs.apisec-playbookCreatePolicy }}" --host "${{ inputs.apisec-hostname }}" --emailReport "${{ inputs.apisec-email-report }}" --fail-on-high-vulns "${{ inputs.apisec-fail-on-high-vulns }}" --oas "${{ inputs.apisec-oas }}" --openApiSpecUrl "${{ inputs.apisec-openapi-spec-url }}" --scanAllProjects  "${{ inputs.apisec-scan-all-projects }}" 
# #    - run:  ${GITHUB_ACTION_PATH}/apisec-scan-trigger.sh --username "${{inputs.apisec-username}}" --password "${{ inputs.apisec-password }}" --projectname "${{ inputs.apisec-project }}" --profile "${{ inputs.apisec-profile }}" --scanner "${{ inputs.apisec-region }}" --outputfile "${{ inputs.sarif-result-file }}" --severity "${{ inputs.apisec-severity  }}" --threshold "${{ inputs.apisec-threshold }}" --playbookRegenerate "${{ inputs.apisec-playbook-regenerate }}" --hostname "${{ inputs.apisec-hostname }}" --emailReport "${{ inputs.apisec-email-report }}" --vulnerabilityPolicy "${{ inputs.apisec-vulnerability-policy }}"
# #    - run:  ${GITHUB_ACTION_PATH}/apisec-scan-trigger.sh "${{inputs.apisec-username}}" "${{ inputs.apisec-password }}" "${{ inputs.apisec-project }}" "${{ inputs.apisec-profile }}" "${{ inputs.apisec-region }}" "${{ inputs.sarif-result-file }}" "${{ inputs.apisec-severity  }}" "${{ inputs.apisec-threshold }}" "${{ inputs.apisec-playbook-regenerate }}" "${{ inputs.apisec-email-report }}"
#       shell: bash




















# # action.yml
# name: 'APIsec Playbook Regeneration'
# description: 'Continuous, automated, comprehensive API Security Testing'
# inputs:
#   apisec-username:
#     description: 'The APIsec username with which the scans will be executed'
#     required: true
#     default: ''
#   apisec-password:
#     description: 'The Password of the APIsec user with which the scans will be executed'
#     required: true
#     default: '' 
#   apisec-projectname:
#     description: 'The Name of the project for security scan'
#     required: true
#     default: ''
#   apisec-profile:  
#     description: 'The Name of the scan profile to be executed'
#     required: false
#     default: 'Master'
#   apisec-region:  
#     description: 'The location the scan will be executed in'
#     required: false
#     default: ''
#   sarif-result-file:  
#     description: 'The path to the sarif format result file'
#     required: false
#     default: ''
#   apisec-host:
#     description: 'APIsec host url'
#     required: false
#     default: ''
#   apisec-email-report:
#     description: 'Whether to send reports email'
#     required: false
#     default: ''
#   apisec-report-type:
#     description: 'Type of Report to be email'
#     required: false
#     default: ''

# runs:
#   using: "composite"
#   steps:
#     - run:  ${GITHUB_ACTION_PATH}/apisec-scan-trigger.sh --username "${{ inputs.apisec-username }}" --password "${{ inputs.apisec-password }}" --projectname "${{ inputs.apisec-projectname }}" --profile "${{ inputs.apisec-profile }}" --scanner "${{ inputs.apisec-region }}" --outputfile "${{ inputs.sarif-result-file }}" --host "${{ inputs.apisec-host }}" --emailReport "${{ inputs.apisec-email-report }}" --reportType "${{ inputs.apisec-report-type }}"  
# #    - run:  ${GITHUB_ACTION_PATH}/github-apisec-scan.sh --username "${{ inputs.apisec-username }}" --password "${{ inputs.apisec-password }}" --projectname "${{ inputs.apisec-projectname }}" --profile "${{ inputs.apisec-profile }}" --scanner "${{ inputs.apisec-region }}" --outputfile "${{ inputs.sarif-result-file }}" --host "${{ inputs.apisec-host }}" --emailReport "${{ inputs.apisec-email-report }}" --reportType "${{ inputs.apisec-report-type }}"
# #    - run:  ${GITHUB_ACTION_PATH}/apisec_playbooks_regenerate_scan_trigger.sh  "${{ inputs.apisec-username }}" "${{ inputs.apisec-password }}" "${{ inputs.apisec-projectname }}" "${{ inputs.apisec-profile }}" "${{ inputs.apisec-region }}" "${{ inputs.sarif-result-file }}" "${{ inputs.apisec-host }}" "${{ inputs.apisec-email-report }}"  "${{ inputs.apisec-report-type }}"
#       shell: bash
